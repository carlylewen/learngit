1.（3.18）
详见E:html\border.html

   #header{
  background-color: black;
  color: white;
  text-align: center;
  padding: 5px;
  }
  #one{
  background: white;
  color: black;
  line-height: 30px;
  height: 300px;
  width: 100px;
  float: left;
  padding: 5px;
  }
  #two{
  background-color: #98a4a9;
  color: black;
  width: 350px;
  float: left;
  padding: 10px;
  }
  #footer{
  background-color: black;
  color: white;
  clear: both;
  text-align: center;
  padding: 5px;
  }


/*水平（垂直）居中*/
  h1,p,div{
  text-align: center;
  }

    /*字体样式 微软雅黑 华文细黑*/
  h1{
  font-family: "Microsoft YaHei";
  }
  div{
  font-family: "MicrosoftJhengHei"f;
  }
  </style>

2.（3.18）

 详见E:git\Git\个人主页.html
 /*边框尺寸（marign,padding,border)*/
  body{
  font-family: "Microsoft YaHei";
  margin-left: 70px;
  margin-top: 100px;
  margin-right: 150px;
  }
如何使用div布局

  <div id="label" style="text-align:center">
  <img src="5.jpg" alt="center"
  width="100px" height="100px"
  >
  <ul>
  <li> my</li>
  <li>life</li>
  <li>hometown</li>
  </ul>
  </div>

#label{
  background-color: #827474;
  color: black;
  float: left;
  width:200px;
  height:inherit;;
  line-height: 30px;
  padding-top: 10px;
  }
图片的定位

 <img src="2.jpg" alt="" align="absmiddle"
  width="50px" height="50px">
3.（3.19）
float
  float: left;
box属性
div{
  border: 30px;
  overflow-x:auto;
  }
/*如果溢出框，则应该提供滚动机制。*/

多列属性
 /*分为多少列*/
  -webkit-column-count:2;
  /*列间间隔*/
  -webkit-column-gap:40px;

可伸缩框
  /*盒子居中*/
display:-webkit-box;
  -webkit-box-pack:center;
  -webkit-box-align:center;
/*定义两个可伸缩的div*/
  #label{
  background-color: #827474;
  color: black;
  width:20%;
  -webkit-box-flex:1.0;}
#content{
  background-color: gray;
  color: black;
  box-flex:2.0;}

怪异盒模型（28布局）
div.box1
{
box-sizing:border-box;
-moz-box-sizing:border-box;
-webkit-box-sizing:border-box;
width:20%;
border:1em solid red;
float:left;
}
4.（3.22）
 双飞翼布局
<!-- 样式 -->
  <head>
  <meta charset="utf-8">
  <title>双飞翼布局</title>
  <style media="screen">
  .main,.left,.right { float:left; height:200px; }
  .left { width:20%; background:#eee; margin-left:-100%; }
  .right { width:30%; background:#ddd; margin-left:-30%; }
  .main { width:100%; background:#ace; }
  .mainln{ margin:0 30% 0 20%;  }
  </style>
  </head>
  <body>
  <!-- 内容 -->
  <div class="wrap">
  <div class="main">
  <!-- 添加div把两边挤开 -->
  <div class="mainln">
  main <!-语义化-->
  </div>
  </div>
  <div class="left">
  left
  </div>
  <div class="right">
  right
  </div>
</div>
  </body>
</html>
圣杯布局
<title>圣杯布局</title>
  <style media="screen">
  .col {position: relative;float: left;}
  #container {padding: 0 190px 0 190px;}
  #main {
  width: 100%;height: 400px;background-color: #ccc;
  }
  #left {
  width: 190px;height: 400px;margin-left: -100%;left: -190px;background-color: #0000FF;
  }
  #right {
  width: 190px;height: 400px;margin-left: -190px;right: -190px;background-color: #FF0000;
  }
  </style>
  </head>
  <body>
  <!-- 内容 -->
  <div id="container">
  <div id="main" class="col">
  我是中间
  </div>
  <div id="left" class="col">
  我是左边
  </div>
  <div id="right" class="col">
  我是右边
  </div>
</div>
  </body>

5.（3.24）
响应式布局

- CSS3-Media Query

- 原生JS

- 第三方开源框架（Bootstrap ）

CSS3多媒体查询
http://www.w3cschool.cn/css3/css3-mediaqueries.html
